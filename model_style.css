body {
    margin: 0;
    font-size: 1.5vmax;
}

#qa {
    container: qa / size;
    width: 100vw;
    height: 100vh;
}

@container qa (aspect-ratio > 2) {
    .card-container {
        flex-direction: row;
    }

    .top {
        flex-direction: column;
        margin-top: 1em;
        margin-bottom: 1em;
        margin-left: 1em;
    }

    .media-wrapper img, .media-wrapper video {
        height: 100vh;
    }
}

@container qa (aspect-ratio < 2) {
    .card-container {
        flex-direction: column;
    }

    .top {
        text-align: center;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;
        margin-left: 1em;
        margin-right: 1em;
        margin-top: 1em;
    }

    .media-wrapper {
        align-self: center;
    }

    .media-wrapper img, .media-wrapper video {
        width: 100vw;
    }
}

.card-container {
    display: flex;
    height: 100vh;
    gap: 2em;
}

.top {
    display: flex;
    flex-wrap: wrap;
    flex: auto;
    gap: 1em;
}

.top span {
    display: inline-block;
}

.top span.note {
    font-size: 0.5em;
}

.answer div {
    display: inline-block;
}

.media-wrapper {
    flex: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 0;
    aspect-ratio: 16 / 9;
    max-width: 100%;
}

.media-wrapper video, .media-wrapper img {
    flex: auto;
    max-width: 100%;
    max-height: 100%;
}

@property --counter {
    syntax: "<integer>";
    initial-value: 0;
    inherits: true;
}

@keyframes zero-counter {
    to {
        --counter: 0
    }
}

.general-timer::after {
    counter-reset: count var(--counter);
    content: counter(count);
}

.general-timer.animate::after {
    --duration: calc(var(--counter) * 1s);
    animation: zero-counter var(--duration) linear forwards;
}

.timer1::after {
    --counter: 20;
}

.timer2::after {
    --counter: 15;
}

.top span.input {
    display: none;
}

.answer-input {
    display: flex;
    flex-wrap: wrap;
}

.answer-input > * {
    flex: auto;
}